apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
/*序列化插件*/
apply plugin: 'kotlin-parcelize'



android {


    //避免编译不能用于在编译类路径中发现的注解处理器，因为它们中的任何更改都需要运行注解处理任务
    kapt.includeCompileClasspath = false



    compileSdkVersion BuildConfig.compileSdkVersion
    buildToolsVersion BuildConfig.buildToolsVersion
    defaultConfig {
        minSdkVersion BuildConfig.minSdk
        targetSdkVersion BuildConfig.targetSdk
        versionCode BuildConfig.versionCode
        versionName BuildConfig.versionName
        consumerProguardFiles BuildConfig.androidJUnitRunner

        ndk {
            // 设置支持的SO库架构
            //abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    /**<-------- AndroidStudio 4.0及以上版本 ------>*/
    buildFeatures {
        viewBinding = true
    }

    resourcePrefix "common_"



}

dependencies {

    api JetPack.HiltCore

    kapt GitHub.ARouteCompiler
    kapt GitHub.EventBusAPT
    kapt GitHub.AutoServiceAnnotations
    kapt JetPack.HiltApt
    kapt JetPack.HiltAndroidx
    kapt JetPack.LifecycleApt
    kapt JetPack.RoomCompiler
    

    api project(path: ':library_base')

}


// 配置导出信息
//tasks.dokkaJavadoc.configure {
//    // 导出的文档目录路径
//    outputDirectory.set(new File(rootDir, "doc"))
//    dokkaSourceSets {
//        named("main") {
//            noAndroidSdkLink.set(true)
//            noStdlibLink.set(true)
//            noJdkLink.set(true)
//        }
//        configureEach {
//            // 包的定义
//            includes.from("packages.md")
//        }
//    }
//}

//dokkaHtml.configure {
//    String dokkaPath = projectDir.absolutePath.replace(rootDir.absolutePath, "")
//    outputDirectory.set(new File(rootDir.absolutePath + File.separator + "dokka" + dokkaPath))
//    dokkaSourceSets {
//        named("main") {
//            includeNonPublic.set(true)
//            noJdkLink.set(true)
//            noStdlibLink.set(true)
//            noAndroidSdkLink.set(true)
//            suppressInheritedMembers.set(true)
//            suppressObviousFunctions.set(false)
//        }
//    }
//}


//def implementationDependencies = project.ext.dependencies
//def processors = project.ext.annotationProcesso
//def implementationExcludes = project.ext.implementationExcludes
//dependencies {
//    // 处理所有的 xxximplementation 依赖
//    implementationDependencies.each { k, v -> implementation v }
//    // 处理 annotationProcessor 依赖
//    processors.each { k, v -> annotationProcessor v }
//    // 处理所有包含 exclude 的依赖
//    implementationExcludes.ååeach { entry ->
//        implementation(entry.key) {
//            entry.value.each { childEntry ->
//                exclude(group: childEntry)
//            }
//        }
//    }
//}

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}